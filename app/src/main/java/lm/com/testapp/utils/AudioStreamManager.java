package lm.com.testapp.utils;

import android.media.AudioFormat;
import android.media.AudioRecord;
import android.media.MediaRecorder;
import android.os.Environment;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

/**
 * Created by PSBC-26 on 2021/11/26.
 */

public class AudioStreamManager {
    private static final int RECORDER_BPP = 16;
    /**
     * 默认录音文件的存储位置
     */
    private static final String AUDIO_RECORDER_FOLDER = "AudioRecorder";
    private static final String AUDIO_RECORDER_TEMP_FILE = "audio_record_temp.raw";
    private static int frequency = 16000;//22050 44100
    /**
     * 单声道
     * CHANNEL_CONFIGURATION_MONO  单声道 CHANNEL_OUT_MONO or  CHANNEL_IN_MONO代替
     * CHANNEL_CONFIGURATION_STEREO 双声道 已过期 用CHANNEL_IN_STEREO或者CHANNEL_OUT_STEREO代替
     */
    private static int channelConfiguration = AudioFormat.CHANNEL_IN_MONO;
    /**
     * 音频数据格式：脉冲编码调制（PCM）每个样品16位
     */
    private static int EncodingBitRate = AudioFormat.ENCODING_PCM_16BIT;
    private AudioRecord audioRecord = null;
    private int recBufSize = 0;
//    AudioStreamManager as = new AudioStreamManager();
//    String content
//    byte[] buffer = Base64.decode(content, Base64.NO_WRAP);
//    as.writeAudioDataToFile(buffer);
//    AndroidUtil.playWavVoice(as.getFileName());

    /**
     * 将录音数据写入到文件
     */
    public void writeAudioDataToFile(byte[] data) {
        createAudioRecord();
        String fileName = getTempFileName();
        FileOutputStream os = null;
        try {
            os = new FileOutputStream(fileName);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        int read = 0;
        if (null != os) {
            read = audioRecord.read(data, 0, recBufSize);
            if (AudioRecord.ERROR_INVALID_OPERATION != read) {
                try {
                    os.write(data);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            try {
                os.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        copyWaveFile(getTempFileName(), getFileName());
    }

    /**
     * 获取临时文件名称
     * @return
     */
    private String getTempFileName() {
        String filePath = Environment.getExternalStorageDirectory().getPath();
        File file = new File(filePath, AUDIO_RECORDER_FOLDER);
        if (!file.exists()) {
            file.mkdirs();
        }
        File tempFile = new File(filePath, AUDIO_RECORDER_TEMP_FILE);
        if (tempFile.exists()) {
            tempFile.delete();
        }
        return (file.getAbsolutePath() + "/" + AUDIO_RECORDER_TEMP_FILE);
    }

    /**
     * 复制wav文件
     *
     * @param inFileName
     * @param outFileName
     */
    private void copyWaveFile(String inFileName, String outFileName) {
        FileInputStream in = null;
        FileOutputStream out = null;
        long totalAudioLen = 0;
        long totalDataLen = totalAudioLen + 36;
        long longSampleRate = frequency;
        int channels = 1;
        long byteRate = RECORDER_BPP * frequency * channels / 8;
        byte[] data = new byte[recBufSize];
        try {
            in = new FileInputStream(inFileName);
            out = new FileOutputStream(outFileName);
            totalAudioLen = in.getChannel().size();
            totalDataLen = totalAudioLen + 36;
            writeWaveFileHeader(out, totalAudioLen, totalDataLen, longSampleRate, channels, byteRate);
            while (in.read(data) != -1) {
                out.write(data);
            }
            //关闭流
            in.close();
            out.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * 文件名称获取
     * @return
     */
    public String getFileName() {
        String filePath = Environment.getExternalStorageDirectory().getAbsolutePath();
        File file = new File(filePath, AUDIO_RECORDER_FOLDER);
        if (file.exists()) {
            file.delete();
        }
        return (file.getAbsolutePath() + "/audio.wav");
    }

    /**
     * audioSource 值得是从哪里采集音频。MIC指的是麦克风
     * sampleRateInHz 音频的采样频率，每秒能够采样的次数，采样率越高，音质越高，一般44100/22050/11025
     * 如果要采集低质量的音频就可以使用4000,8000等低采样率    人声支持8000  16000  32000
     * channelConfig android支持双声道和单声道，MONO单声道，STEREO立体声
     * audioFormat 采集来的数据使用PCM编码，Android支持的采用大小为16bit或者8bit。采样越大，信息量越多，音质也越高，可以在getMInBufferSize()查看。
     * bufferSizeInBytes 采集数据需要缓存区的大小
     */
    private void createAudioRecord() {
        recBufSize = AudioRecord.getMinBufferSize(frequency, channelConfiguration, EncodingBitRate);
        audioRecord = new AudioRecord(MediaRecorder.AudioSource.MIC, frequency, channelConfiguration, EncodingBitRate, recBufSize);
    }

    /**
     * 添加头文件
     *
     * @param out
     * @param totalAudioLen
     * @param totalDataLen
     * @param longSampleRate
     * @param channels
     * @param byteRate
     * @throws IOException
     */
    private void writeWaveFileHeader(FileOutputStream out, long totalAudioLen, long totalDataLen, long longSampleRate, int channels, long byteRate) throws IOException {
        byte[] header = new byte[44];
        //RIFF/WAVE header
        header[0] = 'R';
        header[1] = 'I';
        header[2] = 'F';
        header[3] = 'F';
        header[4] = (byte) (totalDataLen & 0xff);
        header[5] = (byte) ((totalDataLen >> 8) & 0xff);
        header[6] = (byte) ((totalDataLen >> 16) & 0xff);
        header[7] = (byte) ((totalDataLen >> 24) & 0xff);
        // WAVE
        header[8] = 'W';
        header[9] = 'A';
        header[10] = 'V';
        header[11] = 'E';
        // 'fmt' chunk
        header[12] = 'f';
        header[13] = 'm';
        header[14] = 't';
        header[15] = ' ';
        // 4 bytes: size of 'fmt' chunk
        header[16] = 16;
        header[17] = 0;
        header[18] = 0;
        header[19] = 0;
        // format = 1
        header[20] = 1;
        header[21] = 0;
        header[22] = (byte) channels;
        header[23] = 0;
        header[24] = (byte) (longSampleRate & 0xff);
        header[25] = (byte) ((longSampleRate >> 8) & 0xff);
        header[26] = (byte) ((longSampleRate >> 16) & 0xff);
        header[27] = (byte) ((longSampleRate >> 24) & 0xff);
        header[28] = (byte) (byteRate & 0xff);
        header[29] = (byte) ((byteRate >> 8) & 0xff);
        header[30] = (byte) ((byteRate >> 16) & 0xff);
        header[31] = (byte) ((byteRate >> 24) & 0xff);
        // block align
        header[32] = (byte) (2 * 16 / 8);
        header[33] = 0;
        // bits per sample
        header[34] = RECORDER_BPP;
        header[35] = 0;
        //data
        header[36] = 'd';
        header[37] = 'a';
        header[38] = 't';
        header[39] = 'a';
        header[40] = (byte) (totalAudioLen & 0xff);
        header[41] = (byte) ((totalAudioLen >> 8) & 0xff);
        header[42] = (byte) ((totalAudioLen >> 16) & 0xff);
        header[43] = (byte) ((totalAudioLen >> 24) & 0xff);
        out.write(header, 0, 44);
    }
}
